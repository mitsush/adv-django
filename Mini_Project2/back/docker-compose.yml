version: '3.8'

services:
  web:
    build: .
    command: ["web"]
    volumes:
      - ./miniproject:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
  
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    env_file:
      - .env
    command: ["mongod", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongo", "admin", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

    mysql:
      image: mysql:8.0
      ports:
        - "3306:3306"
      env_file:
        - .env
      volumes:
        - mysql_data:/var/lib/mysql
      command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        interval: 10s
        timeout: 5s
        retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  celery:
    build: .
    command: ["celery"]
    volumes:
      - ./miniproject:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    command: ["celery-beat"]
    volumes:
      - ./miniproject:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  mysql_data:
  mongodb_data:
